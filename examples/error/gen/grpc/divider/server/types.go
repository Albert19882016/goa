// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// divider gRPC server types
//
// Command:
// $ goa gen goa.design/goa/examples/error/design -o
// $(GOPATH)/src/goa.design/goa/examples/error

package server

import (
	dividersvc "goa.design/goa/examples/error/gen/divider"
	"goa.design/goa/examples/error/gen/grpc/divider/pb"
)

// NewIntOperands builds the payload of the "integer_divide" endpoint of the
// "divider" service from the gRPC request type.
func NewIntOperands(message *pb.IntegerDivideRequest) *dividersvc.IntOperands {
	v := &dividersvc.IntOperands{
		A: int(message.A),
		B: int(message.B),
	}
	return v
}

// NewIntegerDivideResponse builds the gRPC response type from the result of
// the "integer_divide" endpoint of the "divider" service.
func NewIntegerDivideResponse(res int) *pb.IntegerDivideResponse {
	v := &pb.IntegerDivideResponse{}
	v.Field = int32(res)
	return v
}

// NewFloatOperands builds the payload of the "divide" endpoint of the
// "divider" service from the gRPC request type.
func NewFloatOperands(message *pb.DivideRequest) *dividersvc.FloatOperands {
	v := &dividersvc.FloatOperands{
		A: message.A,
		B: message.B,
	}
	return v
}

// NewDivideResponse builds the gRPC response type from the result of the
// "divide" endpoint of the "divider" service.
func NewDivideResponse(res float64) *pb.DivideResponse {
	v := &pb.DivideResponse{}
	v.Field = res
	return v
}
