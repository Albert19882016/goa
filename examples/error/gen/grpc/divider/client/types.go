// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// divider gRPC client types
//
// Command:
// $ goa gen goa.design/goa/examples/error/design -o
// $(GOPATH)/src/goa.design/goa/examples/error

package client

import (
	dividersvc "goa.design/goa/examples/error/gen/divider"
	"goa.design/goa/examples/error/gen/grpc/divider/pb"
)

// NewIntegerDivideRequest builds the gRPC request type from the payload of the
// "integer_divide" endpoint of the "divider" service.
func NewIntegerDivideRequest(p *dividersvc.IntOperands) *pb.IntegerDivideRequest {
	v := &pb.IntegerDivideRequest{
		A: int32(p.A),
		B: int32(p.B),
	}
	return v
}

// NewIntegerDivideResponse builds the result type of the "integer_divide"
// endpoint of the "divider" service from the gRPC response type.
func NewIntegerDivideResponse(resp *pb.IntegerDivideResponse) int {
	v := int(resp.Field)
	return v
}

// NewDivideRequest builds the gRPC request type from the payload of the
// "divide" endpoint of the "divider" service.
func NewDivideRequest(p *dividersvc.FloatOperands) *pb.DivideRequest {
	v := &pb.DivideRequest{
		A: p.A,
		B: p.B,
	}
	return v
}

// NewDivideResponse builds the result type of the "divide" endpoint of the
// "divider" service from the gRPC response type.
func NewDivideResponse(resp *pb.DivideResponse) float64 {
	v := resp.Field
	return v
}
