// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// chatter gRPC client types
//
// Command:
// $ goa gen goa.design/goa/examples/streaming/design -o
// $(GOPATH)/src/goa.design/goa/examples/streaming

package client

import (
	chattersvc "goa.design/goa/examples/streaming/gen/chatter"
	chattersvcviews "goa.design/goa/examples/streaming/gen/chatter/views"
	"goa.design/goa/examples/streaming/gen/grpc/chatter/pb"
)

// NewLoginRequest builds the gRPC request type from the payload of the "login"
// endpoint of the "chatter" service.
func NewLoginRequest(p *chattersvc.LoginPayload) *pb.LoginRequest {
	v := &pb.LoginRequest{}
	return v
}

// NewLoginResponse builds the result type of the "login" endpoint of the
// "chatter" service from the gRPC response type.
func NewLoginResponse(resp *pb.LoginResponse) string {
	v := resp.Field
	return v
}

func NewEchoerResponse(v *pb.EchoerResponse) string {
	res := v.Field
	return res
}

func NewEchoerStreamingRequest(res string) *pb.EchoerStreamingRequest {
	v := &pb.EchoerStreamingRequest{}
	v.Field = res
	return v
}

func NewListenerStreamingRequest(res string) *pb.ListenerStreamingRequest {
	v := &pb.ListenerStreamingRequest{}
	v.Field = res
	return v
}

func NewChatSummaryCollectionView(v *pb.ChatSummaryCollection) chattersvcviews.ChatSummaryCollectionView {
	vres := make([]*chattersvcviews.ChatSummaryView, len(v.Field))
	for i, val := range v.Field {
		vres[i] = &chattersvcviews.ChatSummaryView{
			Message: &val.Message_,
			SentAt:  &val.SentAt,
		}
		lengthptr := int(val.Length)
		vres[i].Length = &lengthptr
	}
	return vres
}

func NewSummaryStreamingRequest(res string) *pb.SummaryStreamingRequest {
	v := &pb.SummaryStreamingRequest{}
	v.Field = res
	return v
}

// NewHistoryRequest builds the gRPC request type from the payload of the
// "history" endpoint of the "chatter" service.
func NewHistoryRequest(p *chattersvc.HistoryPayload) *pb.HistoryRequest {
	v := &pb.HistoryRequest{}
	return v
}

func NewChatSummaryView(v *pb.HistoryResponse) *chattersvcviews.ChatSummaryView {
	vres := &chattersvcviews.ChatSummaryView{
		Message: &v.Message_,
		SentAt:  &v.SentAt,
	}
	lengthptr := int(v.Length)
	vres.Length = &lengthptr
	return vres
}
