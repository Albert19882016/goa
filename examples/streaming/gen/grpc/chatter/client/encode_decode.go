// Code generated by goa v2.0.0-wip, DO NOT EDIT.
//
// chatter gRPC client encoders and decoders
//
// Command:
// $ goa gen goa.design/goa/examples/streaming/design -o
// $(GOPATH)/src/goa.design/goa/examples/streaming

package client

import (
	"context"

	chattersvc "goa.design/goa/examples/streaming/gen/chatter"
	chatterpb "goa.design/goa/examples/streaming/gen/grpc/chatter"
	goagrpc "goa.design/goa/grpc"
)

// EncodeLoginRequest encodes requests sent to chatter login endpoint.
func EncodeLoginRequest(ctx context.Context, v interface{}) (interface{}, error) {
	p, ok := v.(*chattersvc.LoginPayload)
	if !ok {
		return nil, goagrpc.ErrInvalidType("chatter", "login", "*chattersvc.LoginPayload", v)
	}
	return NewLoginRequest(p), nil
}

// DecodeLoginResponse decodes responses from the chatter login endpoint.
func DecodeLoginResponse(ctx context.Context, v interface{}) (interface{}, error) {
	resp, ok := v.(*chatterpb.LoginResponse)
	if !ok {
		return nil, goagrpc.ErrInvalidType("chatter", "login", "*chatterpb.LoginResponse", v)
	}
	res := NewLoginResponse(resp)
	return res, nil
}

// EncodeHistoryRequest encodes requests sent to chatter history endpoint.
func EncodeHistoryRequest(ctx context.Context, v interface{}) (interface{}, error) {
	p, ok := v.(*chattersvc.HistoryPayload)
	if !ok {
		return nil, goagrpc.ErrInvalidType("chatter", "history", "*chattersvc.HistoryPayload", v)
	}
	return NewHistoryRequest(p), nil
}
